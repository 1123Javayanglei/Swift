/*:
 ## 再说命名事物
 
在“命名和标识符”中，你已经了解在现实生活中和在程序中命名事物的重要性。
 
在代码中，你已经学习了如何定义名称，并通过声明常量，将其与某个值相关联：
 */
let city = "Paris"
/*:
 你还学习了如何定义名称，并通过声明函数，将其与一系列语句相关联：
 */
func printGreeting() {
    let greeting = "Hello"
    print(greeting)
}
/*:
你或许开始看到了一种模式。编程的很大一部分是构成事物、为事物提供名称，然后通过名称调用并使用这些事物。
 
 到目前为止，你已在需要时使用常量为名称赋值。但是，仍有一个重要的问题没有解决：它们为什么叫做常量？
 
 你可能已经猜到“常量”这个名称与不随时间而变化有关。
 
 只要你为常量赋值，就表示你可以确信该值永远不会变。与该名称相关联的值保持不变。
 
 在 Swift 中，还可以使用另一种方法将值与名称相关联。那就是“变量”。
 
 如果使用变量，那么可以在程序运行时，随时间更新值。与该名称相关联的值可随时间更改（变化）。
 
 在此 playground 中，你将了解更多有关变量与常量的区别、如何声明变量，以及如何决定是否要使用变量而不是常量。
 
 这些都是怎样起作用的？为什么如此重要？
 
 继续学习下一页来了解更多内容。

 
 */
//: 第 1 页，共 13 页  |  [下一页：常量和变量](@next)
