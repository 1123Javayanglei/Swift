/*:
 ## 舞蹈套路
 
 跳舞是一件有趣的事情，但若是逐个写出每一个动作，那么即使是描述一支非常简单的舞蹈也会相当的繁复冗长。因此，人们通常会将单个动作串在一起，然后给整套动作起一个名称。 
 
 你可以像下面这样构建函数，在代码中创建舞蹈套路：
 */
func doTheDisco() {
    leftArmUp()
    shakeItRight()
    leftArmDown()
    shakeItCenter()
}
/*:
 当你决定了舞蹈套路中的各个动作之后，就可以调用刚刚创建的函数，让机器人开始跳舞：
 */
startBot()
fabulize()
doTheDisco()
doTheDisco()
doTheDisco()
/*:
 程序员通过函数将各个工作块组合在一起。回顾一下“函数”playground 中所学的内容，函数具有以下功用：
 
 - 函数可重复使用，从而节省读取和键入时间。
 - 函数可作为一个整体进行理解，因此无需考虑每个步骤。
 - 如果对某个函数进行更改，那么使用该函数的任何地方都会应用该更改。
 
 `doTheDisco()` 即具备上述所有优点。
 
 - experiment:(体验):  
 将 `doTheDisco()` 函数更改为镜像模式，即，所有“左侧”的动作都变成“右侧”，所有“右侧”的动作都变成“左侧”。想象一下，如果相同的动作需要键入三次，那得有多少工作量。
 
 想要对 BoogieBot 进行个性化设置吗？在下一页中，我们来学习如何对作品进行签名。
 
 [上一页](@previous)  |  第 5 页，共 13 页  |  [下一页：在作品上签名](@next)
*/
