/*:
 ## 类和结构
 
 你在“Quick Help”或文档中查看 API 时，会看到类似以下针对 `String` 的类型声明。\
 窗格的上方显示声明 `struct String`：
 
 ![String 的 Quick Help 检查器窗格](StringQuickHelp.png)

 当你开始研究其他框架时，会遇到类似以下针对 `UIColor` 的类型声明：
 
 ![UIColor 的 Quick Help 检查器窗格](UIColorQuickHelp.png)
 
 你在 Swift 中构建 app 时，会使用“结构 (structs)”（“结构 (structures)”的缩写）和“类”来处理实例。这两种方法都可在 Swift 中定义类型。
 
 到目前为止，只要知道结构和类有许多相似点就可以了。
 
- 它们都有实例
- 实例是使用构造器创建的
- 它们都可以有方法
- 它们都可以有属性
 
当你创建和使用实例时，不管类型是结构还是类，你编写的 Swift 代码是相同的。
 
在课程的余下部分中，你将进一步练习如何创建实例以及使用方法和属性。在稍后的课程中，你还将学习如何定义自己的结构。探索类和结构之间的区别超出了本课程的范围，但是当你能够熟练使用两者之后，就可以开始了解它们之间的区别了。

 使用方法和属性有什么好处？
 
[上一页](@previous)  |  第 12 页，共 17 页  |  [下一页：为什么使用方法和属性？](@next)
 */
