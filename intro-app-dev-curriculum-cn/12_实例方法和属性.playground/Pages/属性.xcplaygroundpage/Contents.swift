/*:
 ## 属性
 
 在此 playground 一开始，你就已经思考了不同的类型，如“城市”和“汽车”。你可以想象城市的每个实例都具有不同的名称，或汽车的每个实例都具有自己的里程。
 
 同样地，在 Swift 中，每个实例都有一个或多个相关联的信息。这些值称为“属性”。
  
 知道字符串是否确实包含字符通常非常有用。属性 `isEmpty` 可解决这个问题。
 
 该属性的声明如下所示：\
 `var isEmpty: Bool { get }`
 
 该声明看起来类似于变量声明。就像方法是内建于类型每个实例中的函数一样，属性是内建于类型每个实例中的常量或变量。
 
 该属性命名为 `isEmpty` 且类型为 `Bool`。它使用 `var` 进行标记，因为属性值可以随着字符串内容的更改而更改。\
 `{ get }` 表明只能获取此属性的值，但不能对其进行设置。这也称为“只读”属性。
 
 属性的调用方法是在实例之后使用句点 (`.`) 后接属性名称：

*/
let something = "这是最好的时代"
something.isEmpty

let nothing = ""
nothing.isEmpty
/*: 
 属性与方法应用相同的类型保护规则：
 
 - 没有实例就无法使用属性。
 - 只能使用属于实例类型的属性。
 
 >(注):  你到目前为止所使用的类型都没有太多属性，因为它们存储的信息非常简单。在稍后的课程中，你将学习到更加复杂的类型。
 
 在下一页中，我们来学习方法与属性之间的区别。

[上一页](@previous)  |  第 6 页，共 17 页  |  [下一页：属性和方法](@next)
*/
