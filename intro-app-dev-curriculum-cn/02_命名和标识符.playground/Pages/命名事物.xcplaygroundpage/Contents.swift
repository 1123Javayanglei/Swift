//: ## 命名事物
//: 编程中的名称与现实世界中的事物命名一样，能够提供丰富的信息，帮助你跟踪每一项内容。在代码中命名某个值后，就可以在需要使用该值的所有地方使用该名称。这样更易于阅读和理解代码。
//:
//: 名称还有助于避免代码中发生错误。例如，在宠物秀体验中很容易犯错误，因为每次更新时需要更改多行代码中的同一个数字。但是，如果为每个值（例如，the number of turtles）定义了名称，那么只要更改一次该名称的定义，代码中出现该名称的所有地方都会使用更新的定义。
//:
//: 在 Swift 中，可以通过定义_“常量”_来选择名称并将其与值相关联。本课程稍后的部分将对常量进行更加详细的讲解。目前，只要了解常量是 Swift 中命名值的基本方法就可以了。
//:
//: 使用单词 `let` 后接名称来定义常量，使用等号 `=` 为常量赋值：
let numberOfDogs = 6

let numberOfCats = 5

let numberOfTurtles = 2

let numberOfHamsters = 1

//: 定义常量并赋值之后，即可在所有使用该值的地方使用该常量，包括在定义新常量值的数学计算中：

let totalNumberOfAnimals = numberOfDogs + numberOfCats + numberOfTurtles + numberOfHamsters

let totalNumberOfMammals = numberOfDogs + numberOfCats + numberOfHamsters

//: 现在，更新某种动物的数量将会变得更加容易，也更不易出错。你只要更新定义常量的值就可以了。
//:
//: 甚至还可以在等号右侧做加法或减法，让 playground 为你进行计算。例如，如果又有两个人带了狗来，那么无需将 6 更改为 8，只要键入：
//:
//: `let numberOfDogs = 6 + 2`
//: - experiment:
//:(体验):  
//:一周下来，你获得的宠物信息会更多。\
//:根据以下更新内容更新上述代码：
//: - 又有两个人带了狗来。
//: - 生病的乌龟感觉好多了，可以来参加宠物秀。
//: - 其中一只猫不能来了。
//: - 又有人带来一只仓鼠。
//:
//: 体验结束之后，继续进行。
//:
//:[上一页](@previous)  |  第 4 页，共 14 页  |  [下一页：键入名称与自动填写](@next)
