//: 程序员使用他们可以使用的任何工具来解决各种类型的问题。（不一定非得是很严重的问题，有时可能只是“我很无聊，想玩个有趣的游戏”。）
//:
//: 在学习本课程的过程中，你将学到更多解决问题的方法，即使用代码来解决问题并构建超棒的 app。你可以先从一些小而简单、使用基础知识就可以解决的问题开始，但是，随着所拥有的工具数量的增加，你将能够运用所学做得越来越多。
//:
//: 作为程序员，有时你是为自己解决问题并编写 app，但更多的时候，你要帮助他人解决问题。除了学习如何编写代码之外，设想一些不同类型的问题并思考解决之道也很有必要。
//:
//: #### 宠物问题
//: 设想你的朋友正在筹划一场宠物秀，需要记录人们带来的每种动物的数量。
//: 你的朋友还需要记录动物总数和哺乳动物总数。
//:
//: 让我们假设你手上只有一台安装了 Xcode Playgrounds 的笔记本电脑。也许我们可以助你朋友一臂之力。
//:
//: 我们可以利用目前为止所学的内容，通过注释和数字记录每种动物的数量，例如：

// Number Of Dogs
5

// Number Of Cats
4

// Number Of Turtles
3

//: 然后，你可以将这些数字复制下来，让 playground 为你进行计算，如：

// Total Number Of Animals
5 + 4 + 3

// Total Number Of Mammals
5 + 4

//: - experiment:(体验):  一周下来，你获得的宠物信息会更多。根据以下更改更新上述代码。
//: 
//: 例如，如果又有人带来一只狗，那么为了记录更改，需要将`“Number Of Dogs”`从 `5` 更新为 `6`，并在该数字出现的所有地方（`“Total Number Of Animals”`和`“Total Number Of Mammals”`），将 `5` 更改为 `6`。
//: 
//: 如果有人带来一种新的动物，那么可以添加新的注释（例如，`// Number Of Hamsters`），并在下面添加正确的数字，然后更新总数。
//:
//: - 又有人带来一只狗。
//: - 其中一只乌龟生病了，不能来了。
//: - 又有人带来一只猫。
//: - 有人带来一只仓鼠（哺乳动物）。
//: - 有人带来一只鬣蜥（绝对不是哺乳动物）。







