/*:
 ## 参数名称和自变量标签
 
 在上一页中，你已经了解如何更改函数的定义，以便其具有明确的目的，而且读起来像句子。但是，这样做又带来了另外一个问题。
 
 ```
 (示例): 
 func printHello(to: String) {
     print ("Hello " + to)
 }
 printHello(to: "Chris")
 ```
 
 现在，函数中的常数名称为 `to`，但是，这个名称不符合你学过的有关恰当的名称的任何规则。
 
 对于像上面这样的简单函数来说，这确实不是什么重要的问题。但是，你会发现，如果代码较长的话，使用 `to` 作为名称就会相当令人困惑。
 
 要解决这个问题，可以为函数中的参数换一个名称：
 */
func printHello(to name: String) {
    print("Hello " + name) //参数名称
}
printHello(to: "Chris") //调用函数 自变量标签
printHello(to: "Johnny")
/*:
 这个参数被命名了两次。你在调用函数时会看到第一个名称，而在函数主体内则使用另外一个名称。
 
 事实上，可以使用更好的词语来代表这两个名称。调用函数（传入一个或多个自变量）时看到的名称叫做“自变量标签”。 
 
 在函数内使用的名称（已接收的值）是“参数名称”。
 
- experiment:
 (体验):  \
 尝试在上述函数中更改自变量标签和参数名称。请注意，更改自变量标签时，必须更新调用函数的地方。还要注意，更改参数名称时，必须更新函数的主体。
 
 你可能记得 `print()` 函数没有自变量标签。接下来，我们来学习如何处理这样的情况。
 
[上一页](@previous)  |  第 11 页，共 17 页  |  [下一页：没有名称的自变量](@next)
 */
