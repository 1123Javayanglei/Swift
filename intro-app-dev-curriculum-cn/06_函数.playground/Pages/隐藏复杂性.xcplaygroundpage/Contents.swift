/*:
 ## 隐藏复杂性
 
 乍看起来，使用函数打印童谣要比此 playground 第一页上的原始代码更长、更复杂。如果你试图同时思考各个函数的话，那么确实如此。但是，使用函数的关键在于将事情分解成多个便于理解、可重复使用的部分。每个部分明确执行一项任务。
 
 你在处理某个 app 时，绝不会查看每一个代码行。你会调用函数，你只要知道该函数能_“做什么”_就可以了，不一定非得了解它是_“怎么做”_的。例如，本页中已经包含了创建歌谣需要用到的所有函数，因此你可以非常轻松地编写该歌谣：
*/
verseOne()
breatheBetweenVerses()
verseTwo()
breatheBetweenVerses()
verseThree()
/*: 
 - experiment:(体验):  随意移动代码行以便按不同的顺序唱出各小节，或者复制代码行来重复某个小节。

 在下一页中，我们来学习函数的另外一个优点——便于更改程序。
 
 [上一页](@previous)  |  第 8 页，共 12 页  |  [下一页：只更改一次](@next)
*/
