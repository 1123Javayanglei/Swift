/*:
 ## 自定类型
 
 你不是只能使用 Swift 中内建的类型。你可以使用现有的类型作为构造块来定义自己的类型。
 
 在 Swift 中，一种创建新类型的方法是定义“结构 (structure)”，通常称为“结构 (struct)”。结构是将其他类型值组合在一起的一种简单的方法。
 
 要呈现歌曲，可以声明 `Song` 结构，如下所示：
*/
struct Song {
    let title: String
    let artist: String
    let duration: Int
}
/*: 
 这会创建一种新类型，称为 `Song`。 
 
 “Instances”一课中已讲解过属性。`Song` 有三个属性：`title`、`artist` 和 `duration`，每一个属性以 `let` 和类型批注声明。你可以将 `Song` 想象成三个常量的组合。
 
 >(注):  你的结构是一种新类型，与所有其他类型（`String`、`Int`...）一样，其名称应该以大写字母开头。属性名称应该以小写字母开头。这可在读代码时，轻松地区分类型和值。
 
 在声明新类型之后，可以创建实例，如下所示：
*/
let song = Song(title: "No, no, no", artist: "Fizz", duration: 150)
//: “Instances”一课中曾经讲过，每个类型至少有一个构造器。声明结构时，系统会自动创建构造器。由于此构造器针对结构中的每个成员属性都有一个参数，因此称为“逐一成员构造器”。
//: - experiment:(体验):  尝试创建新 `Song`。请注意，自动填写弹出式菜单将包含逐一成员构造器。





//: 接下来，我们来进一步学习结构的属性。
//:
//: [上一页](@previous)  |  第 2 页，共 9 页  |  [下一页：结构属性](@next)
