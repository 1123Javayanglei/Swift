/*:
 ## 类型
 在 Swift 中，每个值都有_“类型”_。
 
 就像日常生活中事物的类型一样，Swift 中的每种类型都具有自己的一套属性和行为。

 你已经使用了两种不同类型的值：
 
 - 字符串，如 `"Hello"` 和 `"Wimbledon"`
 - 数字，如 `101` 和 `-10`
 */
let string = "我是字符串"
let number = 12
//: 也已经发现这些类型的表现是不同的。例如，将它们加在一起时会出现什么情况？
1 + 1 // Equals 2
"1" + "1" // Equals "11"
/*:
 Swift 中字符串类型的名称非常方便记忆，即 `String`。
 
 你一直以来使用的数字类型的名称为 `Int`，是整数的缩写。`Int` 值是整数，不含小数部分。`Int` 可以是正数、负数或零。
 
 到目前为止，你只学过两种类型，接下来将会学到更多类型。了解如何使用不同的类型甚至创建自己的新类型是学习编程的一个重要部分。
 
 想象一个工具箱，里面有套筒扳手、螺丝刀、钳子、锤子。每种类型的工具都只适合于某些特定的任务，而对于其他任务却毫无用处。每次你学习如何在 Swift 中使用一种新的类型时，都是在向你的编程工具箱中添加新工具。
 
 花点时间想象一件你最喜爱的衬衫，然后继续学习下一页。
 
[上一页](@previous)  |  第 2 页，共 13 页  |  [下一页：最喜爱的衬衫](@next)
 */
