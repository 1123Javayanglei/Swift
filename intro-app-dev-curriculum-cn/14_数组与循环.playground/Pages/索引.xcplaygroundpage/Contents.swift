//: ## 索引
//: 以下是设备的数组：
let devices = ["iPhone", "iPad", "iPod", "iMac"]
/*:
 你可以像在上一页中那样，使用“Show Result”按钮在内联视图中查看结果。数组中每个项目的旁边有一个号码，从零开始。
 
 这些号码称为数组中项目的“索引”，代表它们在其中的位置。在本例中，`"iPod"` 位于 `devices` 数组的索引 2 处。由于此数组使用 `let` 定义，因此其中的项目和项目顺序永不会改变。这表示无论你打印此数组多少次，`"iPod"` 始终会在索引 2 处。
 
 - note:(注):  你将发现“index”的复数有时写成“indices”，有时写成“indexes”。
 
 数组中的每个项目都有索引，从第一个项目开始，索引为零。你可以通过将索引放入数组名称之后的方括号中，来获取特定索引中存储的值：
*/
// This gets the object at index 0
devices[0]

/*: 
 - experiment:(体验):  声明常量 `favoriteDevice` 并通过使用 `devices` 数组中的索引，将其值设置为“iPod”。
 */
// Declare favoriteDevice below

/*:
 使用索引获取值必须小心执行。如果你要求列表中不存在的项目，可能会导致严重的程序错误。这就好比告诉别人沿着码头走 100 步，而实际只有 50 步远。如果这个人严格按照你的指示，就像程序严格执行你的代码一样，那么他就会直接掉到水里。

 - experiment:(体验):  尝试获取列表中处于索引 `4` 位置的项目。打开控制台，查看错误的详细信息。
*/



//: 接下来，我们来看看数组包含多少值。\
//: [上一页](@previous)  |  第 3 页，共 17 页  |  [下一页：计数](@next)
