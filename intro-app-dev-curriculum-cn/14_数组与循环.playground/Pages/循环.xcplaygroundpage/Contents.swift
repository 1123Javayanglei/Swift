/*:
 ## 循环
 
 Swift 中内建了一种方法，用于针对数组中的每个项目运行代码。这称为在数组中“循环”。
 
 把它想象成过山车。队列就是数组。车来了，队列中的第一个人上去，环绕一周，下来。然后队列中的下一个人上去再转一圈。 🎢
 
 当你在数组中循环时，先抓取一个项目并使用该项目运行一些代码，然后再抓取下一个项目。 
 
 ![显示代码循环的图形](loop.png)
 
 当代码完成集合中的所有项目时，循环会自动停止，代码会继续执行程序的其余部分。
 
 要针对数组中的每个项目运行代码，可以使用_“for...in”_循环。以下是使用循环处理的 `friends` 组数。
*/
let friends = ["Name", "Name2", "Name3", "Name4", "Name5"]

for friend in friends {
    let sparklyFriend = "✨\(friend)✨"
    print("嘿，\(sparklyFriend)，欢迎周五参加我的派对！")
}
print("完成，已邀请所有朋友。")
//: 第一行以两条重要信息设置循环：
//: 1. 要处理的集合（在本例中为 `friends`）。
//: 2. 用什么调用要处理的项目（在本例中为 `friend`）。
//: 你可以说“对于 (for) 朋友集合中 (in) 的每一位朋友...”
//:
//: 大括号之间的所有代码是循环的 "主体" 。它是要针对集合中每个项目运行的步骤列表。第一次执行循环时，`friend` 的值为 `Name`，第二次值为 `Name2`，以此类推，直到整个集合完成循环。
//: - experiment:(体验):  `friend` 常量定义为 `for` 循环的一部分。如果取消注释下面的代码行，你觉得会发生什么？结果会是所用循环中的最后一个名称吗？或者它会返回错误吗？
//friend
//: 接下来，我们来创建可以更改的数组。\
//: [上一页](@previous)  |  第 7 页，共 17 页  |  [下一页：可变数组](@next)
